const ruLang = [
  [
      { code: 'KeyBacktick', key: 'ё', nameShift: 'Ё', class: 'shortkey',  property: 'printable', }, 
      { code: 'Key1', key: '1', nameShift: '!', class: 'shortkey',  property: 'printable', }, 
      { code: 'Key2', key: '2', nameShift: '\"', class: 'shortkey',  property: 'printable', }, 
      { code: 'Key3', key: '3', nameShift: '№', class: 'shortkey',  property: 'printable', }, 
      { code: 'Key4', key: '4', nameShift: ';', class: 'shortkey',  property: 'printable', }, 
      { code: 'Key5', key: '5', nameShift: '%', class: 'shortkey',  property: 'printable', }, 
      { code: 'Key6', key: '6', nameShift: ':', class: 'shortkey',  property: 'printable', }, 
      { code: 'Key7', key: '7', nameShift: '?', class: 'shortkey',  property: 'printable', }, 
      { code: 'Key8', key: '8', nameShift: '*', class: 'shortkey',  property: 'printable', }, 
      { code: 'Key9', key: '9', nameShift: '(', class: 'shortkey',  property: 'printable', }, 
      { code: 'Key0', key: '0', nameShift: ')', class: 'shortkey',  property: 'printable', }, 
      { code: 'KeyMinus', key: '-', nameShift: '_', class: 'shortkey',  property: 'printable', }, 
      { code: 'KeyEqual', key: '=', nameShift: '=', class: 'shortkey',  property: 'printable', }, 
      { code: 'KeyBackspace', key: 'Backspace', nameShift: 'Backspace', class: 'longkey large', }, 
  ],
  [
      { code: 'KeyTab', key: 'Tab', nameShift: 'Tab', class: 'longkey small', }, 
      { code: 'KeyQ', key: 'й', nameShift: 'Й', class: 'shortkey',  property: 'printable', }, 
      { code: 'KeyW', key: 'ц', nameShift: 'Ц', class: 'shortkey',  property: 'printable', }, 
      { code: 'KeyE', key: 'у', nameShift: 'У', class: 'shortkey',  property: 'printable', }, 
      { code: 'KeyR', key: 'к', nameShift: 'К', class: 'shortkey',  property: 'printable', }, 
      { code: 'KeyT', key: 'е', nameShift: 'Е', class: 'shortkey',  property: 'printable', }, 
      { code: 'KeyY', key: 'н', nameShift: 'Н', class: 'shortkey',  property: 'printable', }, 
      { code: 'KeyU', key: 'г', nameShift: 'Г', class: 'shortkey',  property: 'printable', }, 
      { code: 'KeyI', key: 'ш', nameShift: 'Ш', class: 'shortkey',  property: 'printable', }, 
      { code: 'KeyO', key: 'щ', nameShift: 'Щ', class: 'shortkey',  property: 'printable', }, 
      { code: 'KeyP', key: 'з', nameShift: 'З', class: 'shortkey',  property: 'printable', }, 
      { code: 'KeyBracket_Left', key: 'х', nameShift: 'Х', class: 'shortkey',  property: 'printable', }, 
      { code: 'KeyBracket_Right', key: 'ъ', nameShift: 'Ъ', class: 'shortkey',  property: 'printable', }, 
      { code: 'KeyBackslash', key: '\\', nameShift: '/', class: 'shortkey',  property: 'printable', }, 
      { code: 'KeyDelete', key: 'Del', nameShift: 'Del', class: 'longkey small', },
  ],
  [
      { code: 'KeyCaps', key: 'Caps', nameShift: 'Caps', class: 'longkey small', }, 
      { code: 'KeyA', key: 'ф', nameShift: 'Ф', class: 'shortkey',  property: 'printable', }, 
      { code: 'KeyS', key: 'ы', nameShift: 'Ы', class: 'shortkey',  property: 'printable', }, 
      { code: 'KeyD', key: 'в', nameShift: 'В', class: 'shortkey',  property: 'printable', }, 
      { code: 'KeyF', key: 'а', nameShift: 'А', class: 'shortkey',  property: 'printable', }, 
      { code: 'KeyG', key: 'п', nameShift: 'П', class: 'shortkey',  property: 'printable', }, 
      { code: 'KeyH', key: 'р', nameShift: 'Р', class: 'shortkey',  property: 'printable', }, 
      { code: 'KeyJ', key: 'о', nameShift: 'О', class: 'shortkey',  property: 'printable', }, 
      { code: 'KeyK', key: 'л', nameShift: 'Л', class: 'shortkey',  property: 'printable', }, 
      { code: 'KeyL', key: 'д', nameShift: 'Д', class: 'shortkey',  property: 'printable', }, 
      { code: 'KeySemicolon', key: 'ж', nameShift: 'Ж', class: 'shortkey',  property: 'printable', }, 
      { code: 'KeyQuote', key: 'э', nameShift: 'Э', class: 'shortkey',  property: 'printable', }, 
      { code: 'KeyEnter', key: 'Enter', nameShift: 'Enter', class: 'longkey large', },
  ],
  [
      { code: 'KeyShift_Left', key: 'Shift', nameShift: 'Shift', class: 'longkey medium', }, 
      { code: 'KeyZ', key: 'я', nameShift: 'Я', class: 'shortkey',  property: 'printable', }, 
      { code: 'KeyX', key: 'ч', nameShift: 'Ч', class: 'shortkey',  property: 'printable', }, 
      { code: 'KeyC', key: 'с', nameShift: 'С', class: 'shortkey',  property: 'printable', }, 
      { code: 'KeyV', key: 'м', nameShift: 'М', class: 'shortkey',  property: 'printable', }, 
      { code: 'KeyB', key: 'и', nameShift: 'И', class: 'shortkey',  property: 'printable', }, 
      { code: 'KeyN', key: 'т', nameShift: 'Т', class: 'shortkey',  property: 'printable', }, 
      { code: 'KeyM', key: 'ь', nameShift: 'Ь', class: 'shortkey',  property: 'printable', }, 
      { code: 'KeyComma', key: 'б', nameShift: 'Б', class: 'shortkey',  property: 'printable', }, 
      { code: 'KeyDot', key: 'ю', nameShift: 'Ю', class: 'shortkey',  property: 'printable', }, 
      { code: 'KeySlash', key: '.', nameShift: ',', class: 'shortkey',  property: 'printable', }, 
      { code: 'KeyUp', key: '▲', nameShift: '▲', class: 'shortkey',  property: 'printable', }, 
      { code: 'KeyShift_Right', key: 'Shift', nameShift: 'Shift', class: 'longkey medium', }, 
  ],
  [
      { code: 'KeyCtrl_Left', key: 'Ctrl', nameShift: 'Ctrl', class: 'longkey small', }, 
      { code: 'KeyWin', key: 'Win', nameShift: 'Win', class: 'longkey small', }, 
      { code: 'KeyAlt_Left', key: 'Alt', nameShift: 'Alt', class: 'longkey small', }, 
      { code: 'KeySpace', key: ' ', nameShift: ' ', class: 'longkey space', }, 
      { code: 'KeyAlt_Right', key: 'Alt', nameShift: 'Alt', class: 'longkey small', }, 
      { code: 'KeyLeft', key: '◄', nameShift: '◄', class: 'shortkey',  property: 'printable', }, 
      { code: 'KeyDown', key: '▼', nameShift: '▼', class: 'shortkey',  property: 'printable', }, 
      { code: 'KeyRight', key: '►', nameShift: '►', class: 'shortkey',  property: 'printable', }, 
      { code: 'KeyCtrl_Right', key: 'Ctrl', nameShift: 'Ctrl', class: 'longkey small', }, 
  ],
];

export default ruLang;